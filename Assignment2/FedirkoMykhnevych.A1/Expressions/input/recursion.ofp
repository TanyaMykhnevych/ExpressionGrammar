# recursion.ofp

# Assume a,b > 0, a*b = a + a*(b-1)
int mult(int a,int b) {
	if (b == 1)
	   return a;
    else
       return a + mult(a,b-1);
} 

# Assume a,b > 0, a/b = 1 + (a-b)/b
int div(int a, int b) {
    if (a == b)
       return 1;
    else if (b > a)
       return 0;
    else 
      return 1 + div(a-b,b);
}

# Assume n > 0
int fib(int n) {
   if (n == 0)
      return 1;
   else if (n == 1)
      return 1;
   else 
      return fib(n-2) + fib(n-1);
}


void main() {
   int p = 3;
   int q = 13;
   int res = mult(p,q);
   println(res);   # 39
   
   res = div(q,p);
   println(res);  # 4
   
   int n = 8;
   res = fib(8);
   println(res);  # 34
}